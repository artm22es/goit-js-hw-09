{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAMH,EAAKE,cAAc,WACzBE,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,GAAWT,EAAKU,SAIrC,SAASC,GAAUC,SAAEA,EAAUR,MAAAS,IAC7Bf,EAAAgB,OAAOC,QAAQ,uBAAqBH,QAAiBC,M,CAGvD,SAASG,GAAUJ,SAAEA,EAAUR,MAAAa,IAC7BnB,EAAAgB,OAAOI,QAAQ,sBAAoBN,QAAeK,M,CAPpDjB,EAAKmB,iBAAiB,UAUtB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC9B,MAAMC,EAAYF,OAAOhB,EAAKiB,OACxBE,EAAcH,OAAOd,EAAOe,OAClCrB,EAAIwB,UAAW,EACfC,YAAW,KACTzB,EAAIwB,UAAW,CAAK,IAClBD,EAAc,GAAKD,EAAYH,GAEnCO,MAAMN,OAAOG,IACVI,KAAK,MACLC,SAAQ,CAACC,EAAGC,KAQjB,IAAuBrB,EAAUsB,GAAVtB,EAPHqB,EAAM,EAOOC,EAPJZ,EAQpB,IAAIa,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCZ,YAAW,KACLU,EACFF,EAAI,C,SAAExB,EAAUR,MAAA8B,IAEhBG,EAAI,C,SAAEzB,EAAUR,MAAA8B,GAAQ,GAEzBA,EAAM,KAfJO,KAAK9B,GACL+B,MAAM1B,GACTM,GAAcG,CAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst btn = form.querySelector('button');\nconst { delay, step, amount } = form.elements;\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleRes({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction handleRej({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction handleSubmit(evt) {\n  evt.preventDefault();\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n  btn.disabled = true;\n  setTimeout(() => {\n    btn.disabled = false;\n  }, (amountValue - 1) * stepValue + delayValue);\n\n  Array(Number(amountValue))\n    .fill(null)\n    .forEach((_, idx) => {\n      createPromise(idx + 1, delayValue)\n        .then(handleRes)\n        .catch(handleRej);\n      delayValue += stepValue;\n    });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$btn","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","elements","$47d4ff9957288465$var$handleRes","position","delay1","Notify","success","$47d4ff9957288465$var$handleRej","delay2","failure","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","disabled","setTimeout","Array","fill","forEach","_","idx","delay3","Promise","res","rej","shouldResolve","Math","random","then","catch"],"version":3,"file":"03-promises.b1090e2c.js.map"}